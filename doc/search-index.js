var searchIndex = JSON.parse('{\
"checkpwn":{"doc":"","t":[5,5,5,0,0,5,5,5,17,17,3,3,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,14],"n":["acc_breach_request","acc_check","breach_report","config","errors","main","read_file","strip","CHECKPWN_CONFIG_DIR","CHECKPWN_CONFIG_FILE_NAME","Config","ConfigPaths","api_key","borrow","borrow","borrow_mut","borrow_mut","build_path","config_file_path","deserialize","fmt","fmt","from","from","get_config_path","into","into","load_config","new","save_config","serialize","try_from","try_from","try_into","try_into","type_id","type_id","BUFREADER_ERROR","MISSING_API_KEY","READLINE_ERROR","READ_FILE_ERROR","USAGE_ERROR","set_checkpwn_panic"],"q":["checkpwn","","","","","","","","checkpwn::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","checkpwn::errors","","","","",""],"d":["HIBP breach request used for <code>acc</code> arguments.","","Make a breach report based on a u16 status code and print …","","","MAIN.RS DOCUMENTATION Rowan ADV PROGRAMMING WRKSHP:RUST …","Read file into buffer.","Strip all whitespace and all newlines from a given string.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","All the different errors for checkpwn; Errors that are …","Set panic hook, to have .unwrap(), etc, return the custom …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,1,2,1,2,1,1,2,1,2,1,1,2,1,1,1,1,1,2,1,2,1,2,0,0,0,0,0,0],"f":[[[["str",0],["str",0]],["result",6,[["checkpwnerror",4]]]],[[["str",0]],["result",6,[["checkpwnerror",4]]]],[[["bool",0],["str",0],["bool",0]]],null,null,[[],["result",6]],[[["str",0]],["result",6,[["bufreader",3,[["file",3]]],["error",3]]]],[[["str",0]],["string",3]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["config",3]],["result",4,[["box",3,[["error",8]]]]]],null,[[],["result",4,[["config",3]]]],[[["config",3],["formatter",3]],["result",6]],[[["configpaths",3],["formatter",3]],["result",6]],[[]],[[]],[[["config",3]],["option",4,[["configpaths",3]]]],[[]],[[]],[[["config",3]],["result",4,[["box",3,[["error",8]]]]]],[[],["config",3]],[[["config",3],["str",0]],["result",4,[["box",3,[["error",8]]]]]],[[["config",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null],"p":[[3,"Config"],[3,"ConfigPaths"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
